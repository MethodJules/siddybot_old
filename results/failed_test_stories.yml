version: "2.0"
stories:
- story: search with chatbots organizations details with list (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: information_search_with_chatbot
  - action: utter_information_of_website
  - intent: how_search_with_chatbot
  - action: utter_types_of_information
  - intent: ask_for_information_type  # predicted: ask_for_information_type: [informations about orgas]{"entity": "informationtype", "value": "organization-detail"}[orgas]{"entity": "PERSON", "value": "ORGANIZATION"}
    entities:
    - informationtype: organization-detail
  - slot_was_set:
    - informationtype: organization-detail
  - action: utter_ask_organization_is_known
  - intent: denied
  - action: utter_ask_for_a_list_of_organization
  - intent: list_of  # predicted: list_of: I want to see a list of [15](CARDINAL)[15](CARDINAL) [orgas]{"entity": "object_type", "value": "ORGANIZATION"}
    entities:
    - CARDINAL: '15'
    - object_type: ORGANIZATION
  - slot_was_set:
    - CARDINAL: '15'
  - slot_was_set:
    - object_type: ORGANIZATION
  - action: action_list_of
  - action: utter_explain_ask_for_organization_details
- story: questions persons + explain add missing person + semantic_search_result + not helpful (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: questions_detail_person  # predicted: questions_detail_person: Who are the names of the [siblings](attribute)[siblings](attribute) of [Beate Berger](PERSON)[Beate Berger](PERSON)[Beate Berger](PERSON)
    entities:
    - attribute: sibling
    - PERSON: Beate Berger
  - slot_was_set:
    - PERSON: Beate Berger
  - slot_was_set:
    - attribute: sibling
  - action: action_person_detail
  - slot_was_set:
    - shall_explain_add_person: true
  - slot_was_set:
    - shall_explain_add_entity: false
  - slot_was_set:
    - semantic_search_result: true
  - slot_was_set:
    - last_link: last_link
  - action: utter_results_are_helpful_question
  - intent: denied
  - action: utter_results_are_not_helpful_add_data
  - action: action_collect_mistakes
  - action: utter_shall_explain_add_person
  - intent: agree
  - action: utter_add_person_check_account
  - intent: agree
  - action: utter_please_login
  - intent: agree
  - action: utter_add_person
  - action: action_set_exlpained_add_person
  - intent: agree
  - action: utter_add_person_name
  - intent: agree
  - action: utter_add_person_biography
  - intent: agree
  - action: utter_add_person_family
  - intent: agree
  - action: utter_add_person_chronic
  - intent: agree
  - action: utter_add_person_network
  - intent: agree
  - action: utter_add_person_domicil
  - intent: agree
  - action: utter_add_person_bibliography
  - intent: agree
  - action: utter_add_person_picture
  - intent: agree
  - action: utter_add_person_data
  - intent: agree
  - action: utter_show_person_preview
  - intent: save_created_person  # predicted: save_created_person: I saved the [person](object_type)
  - action: utter_view_created_person
  - intent: thanks
  - action: utter_answer_thanks
- story: questions person + add entity + create account + semantic_search_result  + not helpful + user account menu (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: questions_detail_person  # predicted: questions_detail_person: Please show me the [date](attribute)[date](object_type) of [birth](attribute) of [Benjamin Jonas](PERSON)[Benjamin Jonas](PERSON)[Benjamin Jonas](PERSON)
    entities:
    - attribute: date_of_birth
    - PERSON: Benjamin Jonas
  - slot_was_set:
    - PERSON: Benjamin Jonas
  - slot_was_set:
    - attribute: date_of_birth
  - action: action_person_detail
  - slot_was_set:
    - shall_explain_add_entity: true
  - slot_was_set:
    - shall_explain_add_person: false
  - slot_was_set:
    - semantic_search_result: true
  - slot_was_set:
    - last_link: last_link
  - action: utter_results_are_helpful_question
  - intent: denied
  - action: utter_results_are_not_helpful_add_data
  - action: action_collect_mistakes
  - action: utter_shall_explain_add_entity
  - intent: agree
  - action: utter_add_entity_check_account
  - intent: denied
  - action: utter_user_account_menu
  - intent: denied
  - action: utter_place_user_account_menu
  - action: utter_create_account
  - intent: agree
  - action: utter_please_login
  - intent: agree
  - action: utter_add_entity
  - intent: agree
  - action: utter_add_entity_text_and_NER
  - action: action_set_exlpained_add_entity
  - intent: thanks
  - action: utter_answer_thanks
- story: questions person + add entity + semantic_search_result + helpful (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: questions_detail_person  # predicted: questions_detail_person: [Who]{"entity": "object_type", "value": "PERSON"} were the [mother]{"entity": "attribute", "value": "parents"} of her?
    entities:
    - attribute: parents
  - slot_was_set:
    - attribute: parents
  - action: action_person_detail
  - slot_was_set:
    - shall_explain_add_entity: true
  - slot_was_set:
    - shall_explain_add_person: false
  - slot_was_set:
    - semantic_search_result: true
  - slot_was_set:
    - last_link: last_link
  - action: utter_results_are_helpful_question
  - intent: agree
  - action: utter_results_are_helpful
  - action: utter_shall_explain_add_entity
  - intent: agree
  - action: utter_add_entity_check_account
  - intent: agree
  - action: utter_please_login
  - intent: agree
  - action: utter_add_entity
  - intent: agree
  - action: utter_add_entity_text_and_NER
  - action: action_set_exlpained_add_entity
  - intent: thanks
  - action: utter_answer_thanks
- story: A test where a custom action returns events (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: list_of  # predicted: ask_for_information_type: Please show me some [orgas]{"entity": "informationtype", "value": "ORGANIZATION"}
    entities:
    - object_type: ORGANIZATION
  - slot_was_set:
    - object_type: ORGANIZATION
  - action: action_list_of
- story: yes or no questions for organizations (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: questionsYesNoOrganization_attributes  # predicted: details_of_organizations: Did [the Jewish National Party](ORG)[Jewish National Party](ORG)[Jewish](RELIGION)[Jewish National Party](ORG) had a [leader]{"entity": "attribute", "value": "top_members_employees"}?
    entities:
    - ORG: Jewish National Party
    - attribtue: top_members_employees
  - slot_was_set:
    - ORG: Jewish National Party
  - action: action_yes_no_questions_organization
- story: details of organizations (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: details_of_organizations  # predicted: details_of_organizations: Who was the [boss]{"entity": "attribute", "value": "top_members_employees"} of [the Jewish National Party](ORG)[Jewish National Party](ORG)[Jewish](RELIGION)[Jewish National Party](ORG)?
    entities:
    - attribtue: top_members_employees
    - ORG: Jewish National Party
  - slot_was_set:
    - ORG: Jewish National Party
  - action: action_organization_details
- story: details of organizations (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: details_of_organizations  # predicted: details_of_organizations: Please show me the [leader]{"entity": "attribute", "value": "top_members_employees"} of [the Jewish National Party](ORG)[Jewish National Party](ORG)[Jewish](RELIGION)[Jewish National Party](ORG)?
    entities:
    - attribtue: top_members_employees
    - ORG: Jewish National Party
  - slot_was_set:
    - ORG: Jewish National Party
  - action: action_organization_details
- story: questions person birthday (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: questions_detail_person  # predicted: questions_detail_person: When was the [birthday]{"entity": "attribute", "value": "date_of_birth"} of [the Esther Apfelbaum](ORG)[Esther Apfelbaum](PERSON)?
    entities:
    - attribtue: date_of_birth
    - PERSON: Esther Apfelbaum
  - slot_was_set:
    - PERSON: Esther Apfelbaum
  - action: action_person_detail
  - action: action_listen  # predicted: utter_results_are_helpful_question
- story: yes or no questions persons + semantic_search_result + helpful (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: questionsYesNoPerson_attributes  # predicted: questionsYesNoPerson_attributes: Did [Beate Berger](PERSON)[Beate Berger](PERSON)[Beate Berger](PERSON) had a [husband]{"entity": "attribute", "value": "spouse"}
    entities:
    - PERSON: Beate Berger
    - attribtue: spouse
  - slot_was_set:
    - PERSON: Beate Berger
  - action: action_yes_no_questions_person
- story: add person (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: add_person  # predicted: add_person: How can I add a [person](object_type)?
  - action: utter_add_person_check_account
  - intent: denied
  - action: utter_user_account_menu
  - intent: denied
  - action: utter_place_user_account_menu
  - action: utter_create_account
  - intent: agree
  - action: utter_please_login  # predicted: action_listen
  - intent: agree
  - action: utter_add_person
  - action: action_set_exlpained_add_person
  - intent: agree
  - action: utter_add_person_name
  - intent: agree
  - action: utter_add_person_biography
  - intent: agree
  - action: utter_add_person_family
  - intent: agree
  - action: utter_add_person_chronic
  - intent: agree
  - action: utter_add_person_network
  - intent: agree
  - action: utter_add_person_domicil
  - intent: agree
  - action: utter_add_person_bibliography
  - intent: agree
  - action: utter_add_person_picture
  - intent: agree
  - action: utter_add_person_data
  - intent: agree
  - action: utter_show_person_preview
  - intent: agree
  - action: utter_view_created_person
  - intent: agree
  - action: utter_answer_thanks  # predicted: utter_add_person_family
- story: search with chatbots person details without list (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: information_search_with_chatbot
  - action: utter_information_of_website
  - intent: how_search_with_chatbot
  - action: utter_types_of_information
  - intent: ask_for_information_type  # predicted: ask_for_information_type: I like to know [something about people](informationtype)
    entities:
    - informationtype: person-detail
  - slot_was_set:
    - informationtype: person-detail
  - action: utter_ask_person_is_known
  - intent: agree
  - action: utter_explain_ask_for_person_details
- story: search with chatbots person details with list (C:\Users\Franzi\AppData\Local\Temp\tmpayp6scza\3071c3e3047146beaff62c34f646597d_test_stories.yml)
  steps:
  - intent: information_search_with_chatbot
  - action: utter_information_of_website
  - intent: how_search_with_chatbot
  - action: utter_types_of_information
  - intent: ask_for_information_type  # predicted: ask_for_information_type: I like to know [something about](informationtype) [person]{"entity": "informationtype", "value": "PERSON"}[person](object_type)
    entities:
    - informationtype: person-detail
  - slot_was_set:
    - informationtype: person-detail
  - action: utter_ask_person_is_known
  - intent: denied
  - action: utter_ask_for_a_list_of_person
  - intent: list_of  # predicted: list_of: Please show me [35](CARDINAL)[35](CARDINAL) [orgas]{"entity": "object_type", "value": "ORGANIZATION"}
    entities:
    - CARDINAL: '35'
    - object_type: ORGANIZATION
  - slot_was_set:
    - CARDINAL: '35'
  - slot_was_set:
    - object_type: ORGANIZATION
  - action: action_list_of
  - action: utter_explain_ask_for_person_details
